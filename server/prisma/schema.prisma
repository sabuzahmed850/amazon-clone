datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  isAdmin   Boolean?
  lastName  String?
  orders    Order[]
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Category {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Order {
  createdAt     DateTime               @default(now())
  id            String                 @id @default(cuid())
  paymentStatus EnumOrderPaymentStatus
  prices        Float?
  product       Product?               @relation(fields: [productId], references: [id])
  productId     String?
  status        EnumOrderStatus?
  updatedAt     DateTime               @updatedAt
  user          User?                  @relation(fields: [userId], references: [id])
  userId        String?
}

model Product {
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?
  colorr        Json
  createdAt     DateTime  @default(now())
  discountPrice Float
  id            String    @id @default(cuid())
  images        Json
  orders        Order[]
  review        Review?   @relation(fields: [reviewId], references: [id])
  reviewId      String?
  salePrice     Float
  title         Json
  updatedAt     DateTime  @updatedAt
  variants      Json
}

model Review {
  createdAt   DateTime  @default(now())
  description String
  id          String    @id @default(cuid())
  products    Product[]
  rating      Int
  title       String
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

enum EnumOrderPaymentStatus {
  Option1
}

enum EnumOrderStatus {
  Option1
}
